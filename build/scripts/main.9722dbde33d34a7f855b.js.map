{"version":3,"sources":["webpack:///./src/assets/images/sykesLogo.png","webpack:///./src/actionCreators/counter.js","webpack:///./src/reducers/counter.js","webpack:///./src/actionCreators/error.js","webpack:///./src/reducers/error.js","webpack:///./src/actionCreators/user.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/configureStore.js","webpack:///./src/sagas/hello.js","webpack:///./src/sagas/counter.js","webpack:///./src/utils/index.js","webpack:///./src/sagas/user.js","webpack:///./src/sagas/index.js","webpack:///./src/components/Home/index.jsx","webpack:///./src/components/Examples/Counter/index.jsx","webpack:///./src/components/Examples/DispatchErrorMessage.jsx","webpack:///./src/components/Examples/User/index.jsx","webpack:///./src/HOC/withLoader.jsx","webpack:///./src/components/ErrorMessage/index.jsx","webpack:///./src/HOC/withError.jsx","webpack:///./src/HOC/withFetch.jsx","webpack:///./src/components/Examples/HigherOrderComponent.jsx","webpack:///./src/components/Examples/Forms/Forms.jsx","webpack:///./src/components/Examples/Forms/index.jsx","webpack:///./src/components/Examples/index.jsx","webpack:///./src/routes/index.jsx","webpack:///./src/components/About/index.jsx","webpack:///./src/components/Navbar/index.jsx","webpack:///./src/components/App/index.jsx","webpack:///./src/index.jsx"],"names":["module","exports","__webpack_require__","p","INC_COUNTER","INC_COUNTER_ASYNC","DEC_COUNTER","incrementCounter","type","initialState","count","reducer","state","arguments","length","undefined","action","objectSpread_default","SHOW_ERROR","HIDE_ERROR","stackTrace","message","isShow","_action$payload","payload","error","USER_FETCH_REQUESTED","USER_FETCH_SUCCESS","USER_FETCH_ERROR","data","isFetching","rootReducers","history","combineReducers","counter","user","router","connectRouter","createBrowserHistory","sagaMiddleware","createSagaMiddleware","configureStore","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","routerMiddleware","createStore","applyMiddleware","apply","helloSaga","regenerator_default","a","wrap","_context","prev","next","console","log","stop","_marked","incrementAsync","watchIncrementAsync","delay","seconds","Promise","res","setTimeout","call","put","counter_marked","_context2","takeEvery","_marked2","ms","resolve","fakeRequest","reject","Math","ceil","random","fetchUser","watchFetchUser","userData","t0","user_marked","user_marked2","rootSaga","all","counterSaga","userSaga","sagas_marked","Home","react_default","createElement","Jumbotron_default","className","Button_default","variant","connect","dispatch","increment","decrement","_ref","onClick","showError","hideError","react","tableBody","map","id","first_name","last_name","email","key","disabled","Table_default","striped","bordered","hover","colSpan","style","textAlign","Loader","Spinner_default","animation","role","display","margin","withLoader","WrappedComponent","isLoading","restProps","objectWithoutProperties_default","withLoader_Loader","ErrorMessage","children","Alert_default","extends_default","onClose","Heading","withError","fetchEvent","components_ErrorMessage","withFetch","_useState","useState","_useState2","slicedToArray_default","setData","fetchUsers","then","response","useEffect","useFetchData","enhance","FormComponent","handleSubmit","handleChange","handleBlur","values","isSubmitting","errors","setFieldValue","Form_default","onSubmit","Group","controlId","Label","Control","placeholder","onChange","onBlur","value","Text","password","Check","label","checkbox","checked","BootstrapFormWithFormik","formik_esm","initialValues","validate","test","_ref3","setSubmitting","alert","JSON","stringify","render","props","Forms","examplesComponents","title","desc","path","component","Counter","DisplayErrorMessage","User","EnhancedHelloWorld","Form","routes","exact","_ref2","match","NavLink","to","concat","url","Switch","item","BaseComponent","EnhanceComponent","Fragment","Route","NavbarComponent","Navbar","bg","sticky","src","sykesLogo","Nav","ErrorMessageWithConnect","App","browserHistory","routesArray","route","index","esm","HashRouter","components_Navbar","dismissible","propTypes","PropTypes","object","isRequired","bool","store","run","rootElement","document","getElementById","es","src_components_App"],"mappings":"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","file":"scripts/main.9722dbde33d34a7f855b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"assets/images/sykesLogo.255165e06f8696a9593e834a03b1c494.png\";","//  Actions...\nexport const INC_COUNTER = 'INC_COUNTER';\nexport const INC_COUNTER_ASYNC = 'INC_COUNTER_ASYNC';\nexport const DEC_COUNTER = 'DEC_COUNTER';\n\n// Action creators...\nexport function incrementCounter() {\n  return {\n    type: INC_COUNTER,\n  };\n}\n\nexport function decrementCounter() {\n  return {\n    type: DEC_COUNTER,\n  };\n}\n\nexport function incrementAsyncCounter() {\n  return { type: INC_COUNTER_ASYNC };\n}\n","import { INC_COUNTER, DEC_COUNTER } from '../actionCreators/counter';\n\nconst initialState = { count: 0 };\n\n// Reducer modifying counter state\nconst reducer = (state = initialState, action) => {\n  if (action.type === INC_COUNTER) {\n    return { ...state, count: state.count + 1 };\n  }\n\n  if (action.type === DEC_COUNTER) {\n    return { ...state, count: state.count - 1 };\n  }\n\n  return state;\n};\n\nexport default reducer;\n","// Actions...\nexport const SHOW_ERROR = 'SHOW_ERROR';\nexport const HIDE_ERROR = 'HIDE_ERROR';\n\n// Action creators...\nexport function showError(payload) {\n  return {\n    type: SHOW_ERROR,\n    payload,\n  };\n}\n\nexport function hideError() {\n  return { type: HIDE_ERROR };\n}\n","import { SHOW_ERROR, HIDE_ERROR } from '../actionCreators/error';\n\nconst initialState = { stackTrace: null, message: null, isShow: false };\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === SHOW_ERROR) {\n    const { error, message } = action.payload; // Get the Error data in payload...\n\n    return { isShow: true, stackTrace: error, message };\n  }\n\n  if (action.type === HIDE_ERROR) {\n    return { ...state, isShow: false };\n  }\n\n  // If there's no match in the condition return the initial state...\n\n  return state;\n};\n\nexport default reducer;\n","export const USER_FETCH_REQUESTED = 'USER_FETCH';\nexport const USER_FETCH_SUCCESS = 'USER_FETCH_SUCCESS';\nexport const USER_FETCH_ERROR = 'USER_FETCH_ERROR';\n\nexport function userFetchRequested() {\n  return {\n    type: USER_FETCH_REQUESTED,\n  };\n}\n\nexport function userFetchSuccess(payload) {\n  return {\n    type: USER_FETCH_SUCCESS,\n    payload,\n  };\n}\n\nexport function userFetchError() {\n  return {\n    type: USER_FETCH_ERROR,\n  };\n}\n","import {\n  USER_FETCH_SUCCESS,\n  USER_FETCH_ERROR,\n  USER_FETCH_REQUESTED,\n} from '../actionCreators/user';\n\nconst initialState = { data: [], isFetching: false };\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === USER_FETCH_REQUESTED) {\n    return { ...state, isFetching: true };\n  }\n\n  if (action.type === USER_FETCH_SUCCESS) {\n    return { ...state, data: action.payload.data, isFetching: false };\n  }\n\n  if (action.type === USER_FETCH_ERROR) {\n    return { ...state, isFetching: false };\n  }\n\n  return state;\n};\n\nexport default reducer;\n","import { connectRouter } from 'connected-react-router';\nimport { combineReducers } from 'redux';\n\n// Import all app reducers...\nimport counter from './counter';\nimport error from './error';\nimport user from './user';\n\n// Add all your app reducers here\n// In combine reducers\nconst rootReducers = history =>\n  combineReducers({\n    counter,\n    error,\n    user,\n    router: connectRouter(history),\n  });\n\nexport default rootReducers;\n","import { createLogger } from 'redux-logger';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducers from './reducers';\n\nexport const history = createBrowserHistory();\n\nexport const sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = initialState => {\n  const composeEnhancer =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n\n  if (process.env.NODE_ENV !== 'production') {\n    middlewares.push(createLogger());\n  }\n\n  return createStore(\n    rootReducers(history),\n    initialState, // Set the initial State in the app\n    composeEnhancer(applyMiddleware(...middlewares)),\n  );\n};\n\nexport default configureStore;\n","// Example of disposing saga...\nexport default function* helloSaga() {\n  console.log('Hello Sagas!');\n}\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport { incrementCounter, INC_COUNTER_ASYNC } from '../actionCreators/counter';\n\n// Set a delay utility function...\nexport const delay = seconds => new Promise(res => setTimeout(res, seconds));\n\nexport function* incrementAsync() {\n  yield call(delay, 1000);\n  yield put(incrementCounter());\n}\n\n// Create an observer for every dispatch INC_COUNTER_ASYNC\n// It will call the incrementAsync generator function\nexport default function* watchIncrementAsync() {\n  yield takeEvery(INC_COUNTER_ASYNC, incrementAsync);\n}\n","export const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// Create a fake request for testing purposes only...\nexport const fakeRequest = ms =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const rnd = Math.ceil(Math.random() * 50);\n\n      if (rnd > 30)\n        reject({ message: 'There was something wrong in the server.' });\n      resolve({\n        data:\n          'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis iusto at est hic excepturi! Tempore sapiente delectus iste, excepturi deserunt, magnam mollitia doloremque corrupti suscipit nesciunt reiciendis, sed nulla aut.',\n      });\n    }, ms);\n  });\n","import { call, takeEvery, put } from 'redux-saga/effects';\nimport {\n  USER_FETCH_REQUESTED,\n  userFetchSuccess,\n  userFetchError,\n} from '../actionCreators/user';\nimport { delay } from '../utils';\n\nimport userData from '../data/user.json';\n\nexport function* fetchUser() {\n  try {\n    // Get the from local json file...\n    const data = { data: userData };\n\n    yield call(delay, 5000);\n    yield put(userFetchSuccess(data));\n  } catch (error) {\n    yield put(userFetchError());\n  }\n}\n\nexport default function* watchFetchUser() {\n  yield takeEvery(USER_FETCH_REQUESTED, fetchUser);\n}\n","import { all } from 'redux-saga/effects';\n\n// Import all saga here...\nimport helloSaga from './hello';\nimport counterSaga from './counter';\nimport userSaga from './user';\n\n// Root saga\nexport default function* rootSaga() {\n  yield all([helloSaga(), counterSaga(), userSaga()]);\n}\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\n\nimport './index.scss';\n\nconst Home = () => {\n  return (\n    <Jumbotron>\n      <div className=\"wrapper\">\n        <h1>Hello, Welcome!</h1>\n        <p>\n          This template was created using React + Redux with some other\n          integration libraries such as React-Router for handling routing,\n          Redux-saga for handling side effects (eg: network request) and also\n          React bootstrap for styling pages.\n        </p>\n        <Button variant=\"secondary\">Learn more</Button>\n      </div>\n    </Jumbotron>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  incrementCounter,\n  decrementCounter,\n  incrementAsyncCounter,\n} from '../../../actionCreators/counter';\n\nimport Button from 'react-bootstrap/Button';\n\nimport './index.scss';\n\nconst Counter = ({ count, increment, decrement, incrementAsync }) => {\n  return (\n    <div>\n      <p>Current value is: {count} </p>\n      <div className=\"button-container\">\n        <Button variant=\"secondary\" onClick={increment}>\n          Increment +\n        </Button>\n        <Button variant=\"primary\" onClick={decrement}>\n          Decrement -\n        </Button>\n        <Button variant=\"secondary\" onClick={incrementAsync}>\n          Increment Async +\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  state => state.counter,\n  dispatch => ({\n    increment: () => dispatch(incrementCounter()),\n    incrementAsync: () => dispatch(incrementAsyncCounter()),\n    decrement: () => dispatch(decrementCounter()),\n  }),\n)(Counter);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { showError, hideError } from '../../actionCreators/error';\nimport Button from 'react-bootstrap/Button';\n\nconst DisplayErrorMessage = ({ isShow, hideError, showError }) => {\n  const message =\n    'Lorem ipsum dolor sit amet consectetur adipisicing elit. A molestias eligendi ' +\n    'culpa iure tempore recusandae totam maiores dolores, expedita accusamus ' +\n    'voluptate deleniti, doloremque quia voluptatibus laudantium soluta exercitationem, aut consectetur.';\n\n  return (\n    <Fragment>\n      <Button\n        variant=\"primary\"\n        onClick={() =>\n          !isShow ? showError({ error: 'Test Error', message }) : hideError()\n        }>\n        {' '}\n        {!isShow ? 'Display error' : 'Hide error'}\n      </Button>\n    </Fragment>\n  );\n};\n\nexport default connect(\n  state => state.error,\n  dispatch => ({\n    showError: payload => dispatch(showError(payload)),\n    hideError: () => dispatch(hideError()),\n  }),\n)(DisplayErrorMessage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nimport { userFetchRequested } from '../../../actionCreators/user';\n\nimport './index.scss';\n\nconst User = ({ data, isFetching, fetchUser }) => {\n  const tableBody = data.map(user => {\n    const { id, first_name, last_name, email } = user;\n\n    return (\n      <tr key={id}>\n        <td>{id}</td>\n        <td>{first_name}</td>\n        <td>{last_name}</td>\n        <td>{email}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <div className=\"wrapper\">\n      <Button variant=\"primary\" onClick={fetchUser} disabled={isFetching}>\n        Fetch User\n      </Button>\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>First name</th>\n            <th>Last name</th>\n            <th>Email</th>\n          </tr>\n        </thead>\n        <tbody>\n          {isFetching ? (\n            <tr>\n              <td colSpan={4} style={{ textAlign: 'center' }}>\n                Loading...\n              </td>\n            </tr>\n          ) : !tableBody.length ? (\n            <tr>\n              <td colSpan={4} style={{ textAlign: 'center' }}>\n                No data available\n              </td>\n            </tr>\n          ) : (\n            tableBody\n          )}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default connect(\n  state => state.user,\n  dispatch => ({\n    fetchUser: () => dispatch(userFetchRequested()),\n  }),\n)(User);\n","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n      <h1 style={{ display: 'inline-block', margin: '0 10px 0 10px' }}>\n        Loading...\n      </h1>\n    </div>\n  );\n};\n\nconst withLoader = WrappedComponent => ({ isLoading, ...restProps }) => {\n  return isLoading ? <Loader /> : <WrappedComponent {...restProps} />;\n};\n\nexport default withLoader;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nconst ErrorMessage = ({ message, hideError, children, ...restProps }) => {\n  return (\n    <Alert variant=\"danger\" onClose={hideError} {...restProps}>\n      <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n      <p>{message}</p>\n      {children}\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport ErrorMessage from '../components/ErrorMessage';\nimport Button from 'react-bootstrap/Button';\n\nconst withError = WrappedComponent => ({ error, fetchEvent, ...restProps }) => {\n  return error ? (\n    <ErrorMessage message={error.message}>\n      <Button variant=\"danger\" onClick={fetchEvent}>\n        Retry\n      </Button>\n    </ErrorMessage>\n  ) : (\n    <WrappedComponent {...restProps} />\n  );\n};\n\nexport default withError;\n","import React, { useEffect, useState } from 'react';\nimport { fakeRequest } from '../utils';\n\nfunction useFetchData() {\n  const [data, setData] = useState({\n    data: null,\n    isLoading: false,\n    error: null,\n  });\n\n  function fetchUsers() {\n    setData({ ...data, isLoading: true });\n\n    fakeRequest(3000)\n      .then(response => {\n        setData({\n          ...data,\n          data: response.data,\n          isLoading: false,\n        });\n      })\n      .catch(error => {\n        setData({\n          ...data,\n          error: error,\n          isLoading: false,\n          fetchEvent: fetchUsers, // For re-fetching the data\n        });\n      });\n  }\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return data;\n}\n\nconst withFetch = WrappedComponent => ({ ...restProps }) => {\n  const data = useFetchData();\n\n  return <WrappedComponent {...data} {...restProps} />;\n};\n\nexport default withFetch;\n","import React from 'react';\nimport { compose } from 'redux';\n\nimport withLoader from '../../HOC/withLoader';\nimport withError from '../../HOC/withError';\nimport withFetch from '../../HOC/withFetch';\n\n// Hello World will receive a data props coming from withFetch component...\nconst HelloWorld = ({ data }) => <p>Hello World {data}</p>;\n\nconst enhance = compose(\n  withFetch,\n  withError,\n  withLoader,\n);\n\nexport default enhance(HelloWorld);\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst FormComponent = ({\n  handleSubmit,\n  handleChange,\n  handleBlur,\n  values,\n  errors,\n  isSubmitting,\n  setFieldValue,\n}) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.email}\n        />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.password}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"formBasicCheckBox\">\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Check me out\"\n          onChange={() => {\n            setFieldValue('checkbox', !values.checkbox);\n          }}\n          checked={values.checkbox}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormComponent;\n","import React from 'react';\nimport BootstrapForm from './Forms';\nimport { Formik, Field, ErrorMessage, Form, withFormik } from 'formik';\n\n// Reducing boilerplate code.\nconst Form2 = () => (\n  <div>\n    <h1>Any place in your app!</h1>\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validate={values => {\n        let errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}>\n      {({ isSubmitting, dirty }) => (\n        <Form>\n          <p>{dirty}</p>\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"p\" />\n          <Field type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"p\" />\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </Form>\n      )}\n    </Formik>\n  </div>\n);\n\nconst BootstrapFormWithFormik = () => {\n  return (\n    <Formik\n      initialValues={{\n        email: 'llauderesv@gmail.com',\n        password: 'test',\n        checkbox: true,\n      }}\n      validate={values => {\n        let errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n\n        if (!values.checkbox) {\n          errors.checkbox = 'Required';\n        }\n\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n      render={props => <BootstrapForm {...props} />}\n    />\n  );\n};\n\nexport default BootstrapFormWithFormik;\n","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\n\n// Components section\nimport Counter from './Counter';\nimport DisplayErrorMessage from './DispatchErrorMessage';\nimport User from './User';\nimport EnhancedHelloWorld from './HigherOrderComponent';\nimport Form from './Forms';\n\nimport './index.scss';\n\n/**\n * Collection of examples Component with their details\n *\n */\nconst examplesComponents = [\n  {\n    title: 'Counter',\n    desc: `\n      This counter example is used to demonstrate how to call an \n      action in redux by dispatching actionCreators to increment the value in counter reducer. \n      We also used an increment async to demonstrate how asynchronous action works.\n    `,\n    path: '/counter',\n    component: Counter,\n  },\n  {\n    title: 'Displaying global message',\n    desc: `\n      Used to notify user's when there's an error or a problem in network\n      connectivity and display it in your web app.`,\n    path: '/error-message',\n    component: DisplayErrorMessage,\n  },\n  {\n    title: 'Fetching data in Web Service',\n    desc: `\n      This example is fetching data in web service using redux-saga\n    `,\n    path: '/fetching-data',\n    component: User,\n  },\n  {\n    title: 'Compose',\n    desc: `\n      Compose helper function is a technique or pattern that emerges in Functional programming.\n      It's used to combine multiple functions into one and return an enhance function.\n      Why this important? Remember, in React when you're creating a component you should always\n      keep in mind that your component is composable meaning it can be used by other component w/out\n      using too much dependencies or boilerplate code. If you want to dive in depth you can read the whole article here with a great example.\n      https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10\n    `,\n    path: '/hoc-compose',\n    component: EnhancedHelloWorld,\n  },\n  {\n    title: 'Forms',\n    desc: `\n      When talking forms in react we used a third party library to handle form validation which is Formik.\n    `,\n    path: '/forms',\n    component: Form,\n  },\n];\n\nconst withContainerExample = BaseComponent => ({ title, desc }) => {\n  return (\n    <React.Fragment>\n      <h2>{title}</h2>\n      <p>{desc}</p>\n      <BaseComponent />\n    </React.Fragment>\n  );\n};\n\nconst Examples = ({ match }) => {\n  return (\n    <div className=\"examples-wrapper\">\n      <div className=\"sidebar\">\n        <p className=\"title\">Examples</p>\n        <div className=\"list-container\">\n          <ul className=\"examples-lists\">\n            <li>\n              <NavLink to={`${match.url}/counter`}>Counter</NavLink>\n            </li>\n            <li>\n              <NavLink to={`${match.url}/error-message`}>\n                Displaying error message\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to={`${match.url}/fetching-data`}>Fetching data</NavLink>\n            </li>\n            <li>\n              <NavLink to={`${match.url}/hoc-compose`}>\n                Compose helper function\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to={`${match.url}/forms`}>Forms</NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        <Switch>\n          {examplesComponents.map((item, id) => {\n            const { path, component } = item;\n            const EnhanceComponent = withContainerExample(component);\n\n            return (\n              <Route\n                key={id}\n                path={`${match.url}${path}`}\n                render={() => <EnhanceComponent {...item} />}\n              />\n            );\n          })}\n          <Route\n            exact\n            path={`${match.url}`}\n            render={() => <h1>Choose an example.</h1>}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default Examples;\n","import Home from '../components/Home';\nimport Examples from '../components/Examples';\nimport About from '../components/About';\n\n/**\n * Collection of component routes\n *\n */\nconst routes = [\n  {\n    exact: true,\n    path: '/',\n    component: Home,\n  },\n  {\n    path: '/examples',\n    component: Examples,\n  },\n  {\n    path: '/about',\n    component: About,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nconst About = () => {\n  return (\n    <Jumbotron>\n      <h1>About </h1>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Repudiandae\n        recusandae aliquam minima eveniet ex? Aliquid in ratione, quaerat\n        voluptatem, sunt mollitia tenetur dolore labore consequuntur tempore\n        atque, rerum ad sapiente.\n      </p>\n    </Jumbotron>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n\nimport sykesLogo from '../../assets/images/sykesLogo.png';\n\nconst NavbarComponent = () => {\n  return (\n    <Navbar bg=\"light\" variant=\"light\" sticky=\"top\">\n      <NavLink exact className=\"navbar-brand\" to=\"/\">\n        <img src={sykesLogo} />\n      </NavLink>\n      <Nav className=\"mr-auto\">\n        <NavLink exact className=\"nav-link\" role=\"button\" to=\"/\">\n          Home\n        </NavLink>\n        <NavLink className=\"nav-link\" role=\"button\" to=\"/examples/counter\">\n          Examples\n        </NavLink>\n        <NavLink className=\"nav-link\" role=\"button\" to=\"/about\">\n          About\n        </NavLink>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default NavbarComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport routes from '../../routes';\n\n// Component section\nimport Navbar from '../Navbar';\nimport ErrorMessage from '../ErrorMessage';\n\nimport './index.scss';\n\nconst ErrorMessageWithConnect = connect(\n  state => ({ message: state.error.message }),\n  dispatch => ({\n    hideError: () => dispatch({ type: 'HIDE_ERROR' }),\n  }),\n)(ErrorMessage);\n\nconst App = ({ browserHistory, isShow }) => {\n  const routesArray = routes.map((route, index) => (\n    <Route key={index} {...route} />\n  ));\n\n  return (\n    <ConnectedRouter history={browserHistory}>\n      <HashRouter>\n        <div className=\"app-content\">\n          <Navbar />\n          {isShow && <ErrorMessageWithConnect dismissible />}\n          <Switch>{routesArray}</Switch>\n        </div>\n      </HashRouter>\n    </ConnectedRouter>\n  );\n};\n\nApp.propTypes = {\n  browserHistory: PropTypes.object.isRequired,\n  isShow: PropTypes.bool.isRequired,\n};\n\nexport default connect(state => ({ isShow: state.error.isShow }))(App);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore, { history, sagaMiddleware } from './configureStore';\nimport rootSaga from './sagas';\n\nimport App from './components/App';\n\nimport './assets/scss/custom.scss';\n\nconst store = configureStore();\nsagaMiddleware.run(rootSaga);\n\nconst rootElement = document.getElementById('root');\n\nrender(\n  <Provider store={store}>\n    <App browserHistory={history} />\n  </Provider>,\n  rootElement,\n);\n"],"sourceRoot":""}